/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ApplicationItem } from "@prisma/client";

export class ApplicationItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ApplicationItemCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemCountArgs>
  ): Promise<number> {
    return this.prisma.applicationItem.count(args);
  }

  async applicationItems<T extends Prisma.ApplicationItemFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemFindManyArgs>
  ): Promise<ApplicationItem[]> {
    return this.prisma.applicationItem.findMany(args);
  }
  async applicationItem<T extends Prisma.ApplicationItemFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemFindUniqueArgs>
  ): Promise<ApplicationItem | null> {
    return this.prisma.applicationItem.findUnique(args);
  }
  async createApplicationItem<T extends Prisma.ApplicationItemCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemCreateArgs>
  ): Promise<ApplicationItem> {
    return this.prisma.applicationItem.create<T>(args);
  }
  async updateApplicationItem<T extends Prisma.ApplicationItemUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemUpdateArgs>
  ): Promise<ApplicationItem> {
    return this.prisma.applicationItem.update<T>(args);
  }
  async deleteApplicationItem<T extends Prisma.ApplicationItemDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationItemDeleteArgs>
  ): Promise<ApplicationItem> {
    return this.prisma.applicationItem.delete(args);
  }
}
