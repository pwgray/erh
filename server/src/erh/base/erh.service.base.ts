/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Erh } from "@prisma/client";

export class ErhServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ErhCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhCountArgs>
  ): Promise<number> {
    return this.prisma.erh.count(args);
  }

  async erhs<T extends Prisma.ErhFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhFindManyArgs>
  ): Promise<Erh[]> {
    return this.prisma.erh.findMany(args);
  }
  async erh<T extends Prisma.ErhFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhFindUniqueArgs>
  ): Promise<Erh | null> {
    return this.prisma.erh.findUnique(args);
  }
  async createErh<T extends Prisma.ErhCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhCreateArgs>
  ): Promise<Erh> {
    return this.prisma.erh.create<T>(args);
  }
  async updateErh<T extends Prisma.ErhUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhUpdateArgs>
  ): Promise<Erh> {
    return this.prisma.erh.update<T>(args);
  }
  async deleteErh<T extends Prisma.ErhDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ErhDeleteArgs>
  ): Promise<Erh> {
    return this.prisma.erh.delete(args);
  }
}
