/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MappingLog } from "@prisma/client";

export class MappingLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MappingLogCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogCountArgs>
  ): Promise<number> {
    return this.prisma.mappingLog.count(args);
  }

  async mappingLogs<T extends Prisma.MappingLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogFindManyArgs>
  ): Promise<MappingLog[]> {
    return this.prisma.mappingLog.findMany(args);
  }
  async mappingLog<T extends Prisma.MappingLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogFindUniqueArgs>
  ): Promise<MappingLog | null> {
    return this.prisma.mappingLog.findUnique(args);
  }
  async createMappingLog<T extends Prisma.MappingLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogCreateArgs>
  ): Promise<MappingLog> {
    return this.prisma.mappingLog.create<T>(args);
  }
  async updateMappingLog<T extends Prisma.MappingLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogUpdateArgs>
  ): Promise<MappingLog> {
    return this.prisma.mappingLog.update<T>(args);
  }
  async deleteMappingLog<T extends Prisma.MappingLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MappingLogDeleteArgs>
  ): Promise<MappingLog> {
    return this.prisma.mappingLog.delete(args);
  }
}
